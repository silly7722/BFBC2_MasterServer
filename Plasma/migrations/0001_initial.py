# Generated by Django 4.1.3 on 2022-11-24 19:15

from django.contrib.auth.hashers import make_password
from django.db import migrations, models


def create_server_accounts(apps, schema_editor):
    Account = apps.get_model("Plasma", "Account")

    # Create server account (PC)
    Account(
        nuid="bfbc2.server.pc@ea.com",
        password=make_password("Che6rEPA"),
        isServerAccount=True,
    ).save()

    # Create server account (PS3)
    Account(
        nuid="bfbc.server.ps3@ea.com",
        password=make_password("zAmeH7bR"),
        isServerAccount=True,
    ).save()

    # Create server account (X360)
    Account(
        nuid="bfbc.server.xenon@ea.com",
        password=make_password("B8ApRavE"),
        isServerAccount=True,
    ).save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "nuid",
                    models.EmailField(
                        max_length=32, unique=True, verbose_name="Email Address"
                    ),
                ),
                (
                    "globalOptin",
                    models.BooleanField(
                        default=False,
                        help_text="Send emails about EA games, products, news and events to this user.",
                        verbose_name="Global Opt-In",
                    ),
                ),
                (
                    "thirdPartyOptin",
                    models.BooleanField(
                        default=False,
                        help_text="Allow to share information about this user to selected EA Partners.",
                        verbose_name="Third Party Opt-In",
                    ),
                ),
                (
                    "parentalEmail",
                    models.EmailField(
                        help_text="Email address of the parent or guardian of this user.",
                        max_length=254,
                        null=True,
                        verbose_name="Parental Email Address",
                    ),
                ),
                (
                    "dateOfBirth",
                    models.DateField(null=True, verbose_name="Date of Birth"),
                ),
                (
                    "firstName",
                    models.CharField(
                        max_length=32, null=True, verbose_name="First Name"
                    ),
                ),
                (
                    "lastName",
                    models.CharField(
                        max_length=32, null=True, verbose_name="Last Name"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        help_text="Gender of this user ([F]emale or [M]ale).",
                        max_length=1,
                        null=True,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Address Line 1"
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Address Line 2"
                    ),
                ),
                (
                    "city",
                    models.CharField(max_length=255, null=True, verbose_name="City"),
                ),
                (
                    "state",
                    models.CharField(max_length=255, null=True, verbose_name="State"),
                ),
                (
                    "zipCode",
                    models.CharField(
                        max_length=5, null=True, verbose_name="Zip/Postal Code"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        help_text="ISO Code of user's country.",
                        max_length=3,
                        null=True,
                        verbose_name="Country",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        help_text="Language of this user.",
                        max_length=2,
                        null=True,
                        verbose_name="Language",
                    ),
                ),
                (
                    "tosVersion",
                    models.CharField(
                        help_text="Version of the Terms of Service accepted by this user.",
                        max_length=255,
                        null=True,
                        verbose_name="Terms of Service Version",
                    ),
                ),
                (
                    "isServerAccount",
                    models.BooleanField(
                        default=False,
                        help_text="Is this account a server account?",
                        verbose_name="Server Account",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account",
                "verbose_name_plural": "Accounts",
                "ordering": ("id",),
            },
        ),
        migrations.RunPython(create_server_accounts),
    ]
